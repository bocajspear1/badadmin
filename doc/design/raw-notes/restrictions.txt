Each module will store a list of restrictions of applications and versions, as well as dependencies. This is used during dependency resolution to ensure a working module will only use vulnerabilities that are valid according to the working module's ancestors' restrictions.

The two types of restrictions are version and dependency restrictions.

Version restrictions restrict the provides string and possible version provided by that module's vulnerabilities. For example, a PHP modules passes a version restriction to an apache module indicating it needs an apache version greater and 2.2. The Apache module will only provide vulnerabilities that fit that version range. These restrictions are top-down, basically, they are created higher in the tree. Vulnerabilities will be valid if they DO match the restriction.

Dependency restrictions restrict the provides string and ranges of the dependencies of vulnerabilities in the current module. These restrictions will become the version restrictions of the depenency modules. Dependency modules with pass these to a parent module if it cannot fufill a given version restriction. For example, the Apache module tells a CGI module that it cannot provide a version less then 2.2. The CGI module will now not provide vulnerabilties with that version range. These are passed up from modules lower in the tree, making them bottom-up. Vulnerabilities are valid if they do no match the restriction.

A module will use these restrictions to return a list of vulnerabilities that fit under the given restrictions during dependency resolution
